# Generated by Django 4.2 on 2024-12-01 17:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('session', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'anonim user',
                'verbose_name_plural': 'anonim users',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
            },
        ),
        migrations.CreateModel(
            name='DiscountProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='product/discount-product')),
            ],
            options={
                'verbose_name': 'discount product',
                'verbose_name_plural': 'discount products',
            },
        ),
        migrations.CreateModel(
            name='PopularProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('title_en', models.CharField(max_length=250, null=True)),
                ('title_uz', models.CharField(max_length=250, null=True)),
                ('title_ru', models.CharField(max_length=250, null=True)),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
                ('banner', models.ImageField(upload_to='product/popular-product')),
                ('description', models.TextField()),
                ('description_en', models.TextField(null=True)),
                ('description_uz', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
            ],
            options={
                'verbose_name': 'popular product',
                'verbose_name_plural': 'popular products',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
                ('main_image', models.ImageField(upload_to='product/product/')),
                ('price', models.PositiveBigIntegerField(default=0)),
                ('discount_percentage', models.PositiveIntegerField(default=0)),
                ('is_discount', models.BooleanField(default=False)),
                ('is_top', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'product brand',
                'verbose_name_plural': 'product brands',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('icon', models.ImageField(upload_to='product/category/')),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
                ('is_top', models.BooleanField(default=False)),
                ('is_popular', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'product category',
                'verbose_name_plural': 'product categories',
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rgba_name', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'product color',
                'verbose_name_plural': 'product colors',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('name_en', models.CharField(max_length=250, null=True)),
                ('name_uz', models.CharField(max_length=250, null=True)),
                ('name_ru', models.CharField(max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'regions',
            },
        ),
        migrations.CreateModel(
            name='TechnicalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('category', models.ManyToManyField(related_name='tec_infos', to='product.productcategory')),
            ],
            options={
                'verbose_name': 'technical information',
                'verbose_name_plural': 'technical information',
            },
        ),
        migrations.CreateModel(
            name='TecInfoName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('tec_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tec_infos', to='product.technicalinformation')),
            ],
            options={
                'verbose_name': 'tec info name',
                'verbose_name_plural': 'tec info names',
            },
        ),
        migrations.CreateModel(
            name='ProductTecInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tec_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_tec_infos', to='product.technicalinformation')),
                ('tec_info_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_tec_infos', to='product.tecinfoname')),
            ],
            options={
                'verbose_name': 'product tec info',
                'verbose_name_plural': 'product tec infos',
                'unique_together': {('tec_info', 'tec_info_name')},
            },
        ),
        migrations.CreateModel(
            name='ProductMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media', models.FileField(blank=True, null=True, upload_to='product/product-media')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_medias', to='product.product')),
            ],
            options={
                'verbose_name': 'product media',
                'verbose_name_plural': 'product medias',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.productbrand'),
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='colors',
            field=models.ManyToManyField(related_name='products', to='product.productcolor'),
        ),
        migrations.AddField(
            model_name='product',
            name='info',
            field=models.ManyToManyField(related_name='products', to='product.producttecinfo'),
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('yangi buyurtma', 'yangi buyurtma'), ('jarayonda', 'jarayonda'), ('bekor qiligan', 'bekor qiligan'), ('tugatilgan', 'tugatilgan')], max_length=250)),
                ('first_name', models.CharField(max_length=250)),
                ('last_name', models.CharField(max_length=250)),
                ('method_for_reception', models.CharField(choices=[('yetkazib berish', 'yetkazib berish'), ('olib ketish', 'olib ketish')], max_length=250)),
                ('address', models.CharField(max_length=250)),
                ('floor', models.CharField(max_length=250)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message="Telefon raqami noto'g'ri formatda. To'g'ri format +998901234567 bo'lishi kerak.", regex='^(?:\\+998|998)?[0-9]{9}$')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('product_count', models.PositiveIntegerField(default=0)),
                ('total_price', models.PositiveBigIntegerField(default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='product.city')),
                ('products', models.ManyToManyField(related_name='order_products', to='product.product')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='product.region')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='product.anonymoususer')),
            ],
            options={
                'verbose_name': 'order product',
                'verbose_name_plural': 'order products',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='product.region'),
        ),
    ]
